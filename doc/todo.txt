===== GeToDo TODO =====

- write some testing code to test the libgetodo
	-	TaskManager!
	* TaskPersistence
	* Tag, TagPersistence
	* FilterRule, FilterRulePersistence
	* Task, TaskPersistence
	* Date, DateTime
	* Recurrence, RecurrenceDaily, RecurrenceWeekly, RecurrenceMonthly,
		RecurrenceYearly, RecurrenceIntervalDays
	- [Duration, ...]		
- complete designing GUI in Glade
	- editing panel (remake it), menu, toolbar...
	- Question: how to embed .glade file into the final .exe file?
	  - Is it needed?
- Task (database)
	- add bool done field (to SQL, field, access methods, serialization)
	- rename: description -> title, longDescription -> description
- Recurrence
	- next() for RecurrenceWeekly, RecurrenceMonthly
	- use facet for RecurrenceIntervalDays and possibly RecurrenceYearly
- use operator= for copying Tasks and Tags
- user operator<< and operator>> for I/O of objects like DateTime, Tag, ...  
- write custom TreeModel for FilerRule
- DateTime, Date
	- discard static toString() and move the code to the non-static method
	- output special date values as ""
- delete operator
	- don't check if the deleted pointer isn't NULL, it's redundant
	- exception: don't delete what was never allocated (and had been initialized to NULL) 
- TaskManager - write filtering code
- use exceptions!
- avoid duplicating code!!!
- save sqlite table names somewhere as constants
- database triggers for checking date format validity

==== Think of ====

- Task - think of priority:
	- explicitly set
	- computed from other things
- Duration, FuzzyDate
- FilterRule - think of format and function
- think of a common interface to persistent objects (Task, Tag, FilterRule)
- think whether really use pointers to Task, Tag, ...
- *Persistence - make a common interface
- Task - make simple properties public and remove their getters/setters (really?)

==== BUGS ====

- strange crashes in testing module
	- unhandled exceptions when writing somewhere usually in destructors of
		a basic_stringstream or so
	- from revision 44 on
	- sometime works OK when sqlite3x optimization is /O2 (Maximize Speed)
		- when optimiztion is disabled it crashes
	- happens in conjuction of DateTime (stringstream operations) and sqlite3x 

==== Done - kept for reference ====

* use boost::lexical_cast instead of stringstream for simple type conversions
* run autoreconf --install (only once)
* set LD_CONFIG_... for running main executable (for .so libraries)
